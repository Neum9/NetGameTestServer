// Generated by sprotodump. DO NOT EDIT!
// source: Assets/Sproto/s2c.sproto

using System;
using Sproto;
using System.Collections.Generic;

namespace SprotoType { 
	public class optUnit : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _type; // tag 0
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (0, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _param; // tag 1
		public Int64 param {
			get { return _param; }
			set { base.has_field.set_field (1, true); _param = value; }
		}
		public bool HasParam {
			get { return base.has_field.has_field (1); }
		}

		public optUnit () : base(max_field_count) {}

		public optUnit (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.type = base.deserialize.read_integer ();
					break;
				case 1:
					this.param = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.type, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.param, 1);
			}

			return base.serialize.close ();
		}
	}


	public class playopt {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private optUnit _optUnit; // tag 0
			public optUnit optUnit {
				get { return _optUnit; }
				set { base.has_field.set_field (0, true); _optUnit = value; }
			}
			public bool HasOptUnit {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.optUnit = base.deserialize.read_obj<optUnit> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.optUnit, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _ret; // tag 0
			public Int64 ret {
				get { return _ret; }
				set { base.has_field.set_field (0, true); _ret = value; }
			}
			public bool HasRet {
				get { return base.has_field.has_field (0); }
			}

			private optUnit _optUnit; // tag 1
			public optUnit optUnit {
				get { return _optUnit; }
				set { base.has_field.set_field (1, true); _optUnit = value; }
			}
			public bool HasOptUnit {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.ret = base.deserialize.read_integer ();
						break;
					case 1:
						this.optUnit = base.deserialize.read_obj<optUnit> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.ret, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.optUnit, 1);
				}

				return base.serialize.close ();
			}
		}


	}


}

