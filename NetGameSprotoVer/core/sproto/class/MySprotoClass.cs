// Generated by sprotodump. DO NOT EDIT!
// source: Login.sproto

using System;
using Sproto;
using System.Collections.Generic;

namespace SprotoType
{
	public class spHeartBeat
	{

		public class request : SprotoTypeBase
		{
			private static int max_field_count = 1;


			private Int64 _time; // tag 0
			public Int64 time {
				get { return _time; }
				set { base.has_field.set_field(0, true); _time = value; }
			}
			public bool HasTime {
				get { return base.has_field.has_field(0); }
			}

			public request() : base(max_field_count) { }

			public request(byte[] buffer) : base(max_field_count, buffer) {
				this.decode();
			}

			protected override void decode() {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag())) {
					switch (tag) {
						case 0:
							this.time = base.deserialize.read_integer();
							break;
						default:
							base.deserialize.read_unknow_data();
							break;
					}
				}
			}

			public override int encode(SprotoStream stream) {
				base.serialize.open(stream);

				if (base.has_field.has_field(0)) {
					base.serialize.write_integer(this.time, 0);
				}

				return base.serialize.close();
			}
		}


		public class response : SprotoTypeBase
		{
			private static int max_field_count = 0;


			public response() : base(max_field_count) { }

			public response(byte[] buffer) : base(max_field_count, buffer) {
				this.decode();
			}

			protected override void decode() {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag())) {
					switch (tag) {
						default:
							base.deserialize.read_unknow_data();
							break;
					}
				}
			}

			public override int encode(SprotoStream stream) {
				base.serialize.open(stream);

				return base.serialize.close();
			}
		}


	}


	public class spLogin
	{

		public class request : SprotoTypeBase
		{
			private static int max_field_count = 1;


			private spUserInfo _userInfo; // tag 0
			public spUserInfo userInfo {
				get { return _userInfo; }
				set { base.has_field.set_field(0, true); _userInfo = value; }
			}
			public bool HasUserInfo {
				get { return base.has_field.has_field(0); }
			}

			public request() : base(max_field_count) { }

			public request(byte[] buffer) : base(max_field_count, buffer) {
				this.decode();
			}

			protected override void decode() {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag())) {
					switch (tag) {
						case 0:
							this.userInfo = base.deserialize.read_obj<spUserInfo>();
							break;
						default:
							base.deserialize.read_unknow_data();
							break;
					}
				}
			}

			public override int encode(SprotoStream stream) {
				base.serialize.open(stream);

				if (base.has_field.has_field(0)) {
					base.serialize.write_obj(this.userInfo, 0);
				}

				return base.serialize.close();
			}
		}


		public class response : SprotoTypeBase
		{
			private static int max_field_count = 1;


			private bool _ok; // tag 0
			public bool ok {
				get { return _ok; }
				set { base.has_field.set_field(0, true); _ok = value; }
			}
			public bool HasOk {
				get { return base.has_field.has_field(0); }
			}

			public response() : base(max_field_count) { }

			public response(byte[] buffer) : base(max_field_count, buffer) {
				this.decode();
			}

			protected override void decode() {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag())) {
					switch (tag) {
						case 0:
							this.ok = base.deserialize.read_boolean();
							break;
						default:
							base.deserialize.read_unknow_data();
							break;
					}
				}
			}

			public override int encode(SprotoStream stream) {
				base.serialize.open(stream);

				if (base.has_field.has_field(0)) {
					base.serialize.write_boolean(this.ok, 0);
				}

				return base.serialize.close();
			}
		}


	}


	public class spUserInfo : SprotoTypeBase
	{
		private static int max_field_count = 2;


		private string _name; // tag 0
		public string name {
			get { return _name; }
			set { base.has_field.set_field(0, true); _name = value; }
		}
		public bool HasName {
			get { return base.has_field.has_field(0); }
		}

		private string _password; // tag 1
		public string password {
			get { return _password; }
			set { base.has_field.set_field(1, true); _password = value; }
		}
		public bool HasPassword {
			get { return base.has_field.has_field(1); }
		}

		public spUserInfo() : base(max_field_count) { }

		public spUserInfo(byte[] buffer) : base(max_field_count, buffer) {
			this.decode();
		}

		protected override void decode() {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag())) {
				switch (tag) {
					case 0:
						this.name = base.deserialize.read_string();
						break;
					case 1:
						this.password = base.deserialize.read_string();
						break;
					default:
						base.deserialize.read_unknow_data();
						break;
				}
			}
		}

		public override int encode(SprotoStream stream) {
			base.serialize.open(stream);

			if (base.has_field.has_field(0)) {
				base.serialize.write_string(this.name, 0);
			}

			if (base.has_field.has_field(1)) {
				base.serialize.write_string(this.password, 1);
			}

			return base.serialize.close();
		}
	}


}


public class Protocol : ProtocolBase
{
	public static Protocol Instance = new Protocol();
	private Protocol() {
		Protocol.SetProtocol<spHeartBeat>(spHeartBeat.Tag);
		Protocol.SetRequest<SprotoType.spHeartBeat.request>(spHeartBeat.Tag);
		Protocol.SetResponse<SprotoType.spHeartBeat.response>(spHeartBeat.Tag);

		Protocol.SetProtocol<spLogin>(spLogin.Tag);
		Protocol.SetRequest<SprotoType.spLogin.request>(spLogin.Tag);
		Protocol.SetResponse<SprotoType.spLogin.response>(spLogin.Tag);

	}

	public class spHeartBeat
	{
		public const int Tag = 0;
	}

	public class spLogin
	{
		public const int Tag = 1;
	}

}